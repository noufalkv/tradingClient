name: CI and CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.9.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm install

    #   - name: Run Prettier
    #     run: npm run format

    #   - name: Run ESLint
    #     run: npm run lint:fix

    #   - name: Run Unit Tests
    #     run: npm run test


  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22.9.0"

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Setup credentials
        env:
          MYAPP_RELEASE_STORE_FILE: ${{ secrets.MYAPP_RELEASE_STORE_FILE }}
        run: |
          # Decode and create keystore file
          echo "$MYAPP_RELEASE_STORE_FILE" | base64 -d > android/app/trading_app_keystore.jks
          
          # Verify keystore was created successfully
          file android/app/trading_app_keystore.jks
          ls -lh android/app/trading_app_keystore.jks
          
          # Create gradle.properties with signing configuration
          cat >> android/gradle.properties << 'EOF'
          MYAPP_RELEASE_STORE_FILE=app/trading_app_keystore.jks
          MYAPP_RELEASE_STORE_PASSWORD=${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}
          MYAPP_RELEASE_KEY_ALIAS=${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}
          MYAPP_RELEASE_KEY_PASSWORD=${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}
          EOF
          
          # Verify gradle.properties was created
          echo "=== gradle.properties content ===" 
          tail -4 android/gradle.properties

      - name: Install Node.js dependencies
        run: npm install

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: android

      - name: Deploy to Google Play Store
        working-directory: android
        env:
          PLAYSTORE_CREDENTIALS: ${{ secrets.PLAYSTORE_CREDENTIALS }}
        run: |
          echo "$PLAYSTORE_CREDENTIALS" > fastlane/playstore-credentials.json
          bundle exec fastlane playstore